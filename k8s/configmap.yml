apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: secure-api-system
data:
  # Frontend Configuration
  API_BASE_URL: "https://api.example.com"
  APP_TITLE: "Secure API System"
  APP_VERSION: "1.0.0"
  NODE_ENV: "production"
  
  # Backend Configuration
  SPRING_PROFILES_ACTIVE: "production"
  LOG_LEVEL: "info"
  
  # Database Configuration
  DB_HOST: "mysql-service"
  DB_PORT: "3306"
  DB_NAME: "secure_api_db"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  
  # Security Configuration
  JWT_EXPIRATION: "86400"
  
  # Rate Limiting
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "3600"
  
  # Monitoring
  METRICS_ENABLED: "true"
  HEALTH_CHECK_ENABLED: "true"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: secure-api-system
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        upstream backend {
            server backend-service:8080;
        }

        server {
            listen 80;
            server_name _;

            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;

            # API proxy
            location /api/ {
                proxy_pass http://backend/api/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # Frontend
            location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
                try_files $uri $uri/ /index.html;
            }

            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }